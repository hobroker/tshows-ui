"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DiscoverShowsInput {
  genreIds: [Int!]!
}

type Episode {
  airDate: DateTime
  description: String
  externalId: Int!
  id: Int!
  isWatched: Boolean!
  name: String!
  number: Int!
  seasonNumber: Int!
  show: Show!
  showId: Int!
  wideImage: String
}

input FullShowInput {
  externalId: Int!
}

type Genre {
  externalId: Int!
  name: String!
}

input GetRatingInput {
  showId: Int!
}

input GetReviewInput {
  showId: Int!
}

input GetSeasonEpisodesInput {
  seasonNumber: Int!
  showId: Int!
}

input JoinWithGoogleInput {
  token: String!
}

input ListRecommendationsInput {
  genreIds: [Int!]
}

type Mutation {
  joinWithGoogle(input: JoinWithGoogleInput!): User!
  logout: Void!
  readAllNotifications: Void!
  readNotification(input: ReadNotificationInput!): Void!
  refresh: User!
  toggleGenrePreference(input: ToggleGenrePreferenceInput!): Void!
  upsertEpisode(input: UpsertEpisodeInput!): Episode
  upsertReview(input: UpsertReviewInput!): Review!
  upsertWatchlistItem(input: UpsertWatchlistInput!): Watchlist!
}

type Notification {
  episode: Episode!
  id: Int!
  isRead: Boolean
}

type PieItem {
  id: String!
  label: String!
  value: Int!
}

type Preference {
  genres: [Genre!]!
  id: Int!
}

type Query {
  discoverShows(input: DiscoverShowsInput!): [Show!]!
  fullShow(input: FullShowInput!): Show!
  getMyReview(input: GetReviewInput!): Review
  getMyShows: [Show!]!
  getOtherReviews(input: GetReviewInput!): [Review!]!
  getPreferences: Preference
  getRating(input: GetRatingInput!): Review!
  getSeasonEpisodes(input: GetSeasonEpisodesInput!): [Episode!]!
  getSimilarShows(input: SimilarShowsInput!): [Show!]!
  getStatsCalendar: [StatsCalendarItem!]!
  getStatsGenres: [PieItem!]!
  getStatsSummary: [StatsSummaryItem!]!
  getWatchlist: [Watchlist!]!
  listGenres: [Genre!]
  listNotifications: [Notification!]!
  listRecommendations(input: ListRecommendationsInput!): [Show!]!
  listTrending(input: TrendingInput!): [Show!]!
  listUpNext: [Episode!]!
  listUpcoming: [Episode!]!
  me: User!
  search(input: SearchInput!): [Show!]!
}

input ReadNotificationInput {
  notificationId: Int!
}

type Review {
  content: String
  id: Int!
  rating: Int
  title: String
  user: User!
}

input SearchInput {
  query: String!
}

type Season {
  airDate: DateTime
  description: String
  episodeCount: String!
  name: String!
  number: Int!
  tallImage: String
}

type Show {
  description: String!
  episodeRuntime: Int!
  externalId: Int!
  firstAirDate: DateTime!
  genres: [Genre!]!
  isInProduction: Boolean!
  name: String!
  originCountry: String!
  seasons: [Season!]!
  status: Status!
  tagline: String
  tallImage: String
  wideImage: String
}

input SimilarShowsInput {
  externalId: Int!
}

type StatsCalendarItem {
  day: String!
  value: Int!
}

type StatsSummaryItem {
  key: StatsSummaryItemKey!
  value: Int!
}

enum StatsSummaryItemKey {
  SpentMinutes
  WatchedEpisodesCount
  WatchingTvShowsCount
}

enum Status {
  FinishedWatching
  InWatchlist
  None
  StoppedWatching
}

input ToggleGenrePreferenceInput {
  genreId: Int!
}

input TrendingInput {
  page: Int
}

input UpsertEpisodeInput {
  episodeId: Int!
  isWatched: Boolean!
}

input UpsertReviewInput {
  content: String
  rating: Int
  showId: Int!
  title: String
}

input UpsertWatchlistInput {
  showId: Int!
  status: Status!
}

type User {
  avatar: String
  createdAt: DateTime!
  email: String!
  id: Int!
  name: String!
}

type Void {
  _: String
}

type Watchlist {
  show: Show!
  status: Status!
}
